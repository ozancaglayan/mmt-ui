#!/usr/bin/env python
from collections import defaultdict
import argparse

import bz2
import pickle as pkl

from pathlib import Path


def read_sentences(fname):
    lines = []
    with open(fname) as f:
        for line in f:
            lines.append(line.strip())
    return lines


def dump_dict(d, out_folder):
    srcs = {}
    file_contents = {}
    fname_to_sys = defaultdict(list)
    for sysname, fname in d.items():
        fname_to_sys[fname].append(sysname)
        if fname not in file_contents:
            file_contents[fname] = read_sentences(fname)

    for fname, systems in fname_to_sys.items():
        master = systems.pop(0)
        srcs[master] = file_contents[fname]
        for sysname in systems:
            srcs[sysname] = master

    with bz2.BZ2File(out_folder / 'srcs.pkl.bz2', 'w') as f:
        pkl.dump(srcs, f)


def get_src_file(test_set, log, src_key):
    inside = False
    for idx, line in enumerate(log):
        if '{}_set'.format(test_set) in line:
            inside = True
        elif inside and ('[vocabulary]' in line or '_set:' in line):
            break
        elif inside:
            key, *value = line.split(':')
            key = key.strip()
            if key == src_key:
                return Path(value.pop(0))


def parse_multeval_folder(fold, src_key):
    root = Path(fold)

    for test_set in root.iterdir():
        print('Found test set: {}'.format(test_set.name))
        d = {}

        # Get the systems
        with open(test_set / 'results.txt') as f:
            # Skip first 3 lines lines
            f.readline()
            f.readline()
            f.readline()
            systems = [line.strip().split()[0] for line in f]

        for system in systems:
            log = list(Path(system).glob('*.log'))[0]
            log = log.read_text().split('\n')
            d[system] = get_src_file(test_set.name, log, src_key)

        dump_dict(d, test_set)


def main():
    parser = argparse.ArgumentParser(prog='sentcompare-copyfiles')

    parser.add_argument('folders', nargs='+',
                        help='Folder where multeval produced the results.')

    parser.add_argument('-s', '--src-key', type=str, required=True,
                        help='Source modality key when parsing log files.')

    # Parse arguments
    args = parser.parse_args()
    for fold in args.folders:
        parse_multeval_folder(fold, args.src_key)


if __name__ == '__main__':
    main()
